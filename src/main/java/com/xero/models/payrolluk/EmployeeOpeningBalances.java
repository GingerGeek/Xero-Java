/*
 * Xero Payroll UK
 * This is the Xero Payroll API for orgs in the UK region.
 *
 * The version of the OpenAPI document: 2.1.3
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.payrolluk;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.LocalDateTime;
import org.threeten.bp.ZoneId;
import org.threeten.bp.Instant;
import org.threeten.bp.LocalDate;
import com.xero.api.StringUtil;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * EmployeeOpeningBalances
 */

public class EmployeeOpeningBalances {
  StringUtil util = new StringUtil();

  @JsonProperty("statutoryAdoptionPay")
  private Float statutoryAdoptionPay;

  @JsonProperty("statutoryMaternityPay")
  private Float statutoryMaternityPay;

  @JsonProperty("statutoryPaternityPay")
  private Float statutoryPaternityPay;

  @JsonProperty("statutorySharedParentalPay")
  private Float statutorySharedParentalPay;

  @JsonProperty("statutorySickPay")
  private Float statutorySickPay;

  @JsonProperty("priorEmployeeNumber")
  private Float priorEmployeeNumber;
  public EmployeeOpeningBalances statutoryAdoptionPay(Float statutoryAdoptionPay) {
    this.statutoryAdoptionPay = statutoryAdoptionPay;
    return this;
  }

   /**
   * The total accumulated statutory adoption pay amount received by the employee for current fiscal year to date
   * @return statutoryAdoptionPay
  **/
  @ApiModelProperty(value = "The total accumulated statutory adoption pay amount received by the employee for current fiscal year to date")
  public Float getStatutoryAdoptionPay() {
    return statutoryAdoptionPay;
  }

  public void setStatutoryAdoptionPay(Float statutoryAdoptionPay) {
    this.statutoryAdoptionPay = statutoryAdoptionPay;
  }

  public EmployeeOpeningBalances statutoryMaternityPay(Float statutoryMaternityPay) {
    this.statutoryMaternityPay = statutoryMaternityPay;
    return this;
  }

   /**
   * The total accumulated statutory maternity pay amount received by the employee for current fiscal year to date
   * @return statutoryMaternityPay
  **/
  @ApiModelProperty(value = "The total accumulated statutory maternity pay amount received by the employee for current fiscal year to date")
  public Float getStatutoryMaternityPay() {
    return statutoryMaternityPay;
  }

  public void setStatutoryMaternityPay(Float statutoryMaternityPay) {
    this.statutoryMaternityPay = statutoryMaternityPay;
  }

  public EmployeeOpeningBalances statutoryPaternityPay(Float statutoryPaternityPay) {
    this.statutoryPaternityPay = statutoryPaternityPay;
    return this;
  }

   /**
   * The total accumulated statutory paternity pay amount received by the employee for current fiscal year to date
   * @return statutoryPaternityPay
  **/
  @ApiModelProperty(value = "The total accumulated statutory paternity pay amount received by the employee for current fiscal year to date")
  public Float getStatutoryPaternityPay() {
    return statutoryPaternityPay;
  }

  public void setStatutoryPaternityPay(Float statutoryPaternityPay) {
    this.statutoryPaternityPay = statutoryPaternityPay;
  }

  public EmployeeOpeningBalances statutorySharedParentalPay(Float statutorySharedParentalPay) {
    this.statutorySharedParentalPay = statutorySharedParentalPay;
    return this;
  }

   /**
   * The total accumulated statutory shared parental pay amount received by the employee for current fiscal year to date
   * @return statutorySharedParentalPay
  **/
  @ApiModelProperty(value = "The total accumulated statutory shared parental pay amount received by the employee for current fiscal year to date")
  public Float getStatutorySharedParentalPay() {
    return statutorySharedParentalPay;
  }

  public void setStatutorySharedParentalPay(Float statutorySharedParentalPay) {
    this.statutorySharedParentalPay = statutorySharedParentalPay;
  }

  public EmployeeOpeningBalances statutorySickPay(Float statutorySickPay) {
    this.statutorySickPay = statutorySickPay;
    return this;
  }

   /**
   * The total accumulated statutory sick pay amount received by the employee for current fiscal year to date
   * @return statutorySickPay
  **/
  @ApiModelProperty(value = "The total accumulated statutory sick pay amount received by the employee for current fiscal year to date")
  public Float getStatutorySickPay() {
    return statutorySickPay;
  }

  public void setStatutorySickPay(Float statutorySickPay) {
    this.statutorySickPay = statutorySickPay;
  }

  public EmployeeOpeningBalances priorEmployeeNumber(Float priorEmployeeNumber) {
    this.priorEmployeeNumber = priorEmployeeNumber;
    return this;
  }

   /**
   * The unique employee number issued by the employee&#39;s former employer
   * @return priorEmployeeNumber
  **/
  @ApiModelProperty(value = "The unique employee number issued by the employee's former employer")
  public Float getPriorEmployeeNumber() {
    return priorEmployeeNumber;
  }

  public void setPriorEmployeeNumber(Float priorEmployeeNumber) {
    this.priorEmployeeNumber = priorEmployeeNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeOpeningBalances employeeOpeningBalances = (EmployeeOpeningBalances) o;
    return Objects.equals(this.statutoryAdoptionPay, employeeOpeningBalances.statutoryAdoptionPay) &&
        Objects.equals(this.statutoryMaternityPay, employeeOpeningBalances.statutoryMaternityPay) &&
        Objects.equals(this.statutoryPaternityPay, employeeOpeningBalances.statutoryPaternityPay) &&
        Objects.equals(this.statutorySharedParentalPay, employeeOpeningBalances.statutorySharedParentalPay) &&
        Objects.equals(this.statutorySickPay, employeeOpeningBalances.statutorySickPay) &&
        Objects.equals(this.priorEmployeeNumber, employeeOpeningBalances.priorEmployeeNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statutoryAdoptionPay, statutoryMaternityPay, statutoryPaternityPay, statutorySharedParentalPay, statutorySickPay, priorEmployeeNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeOpeningBalances {\n");
    sb.append("    statutoryAdoptionPay: ").append(toIndentedString(statutoryAdoptionPay)).append("\n");
    sb.append("    statutoryMaternityPay: ").append(toIndentedString(statutoryMaternityPay)).append("\n");
    sb.append("    statutoryPaternityPay: ").append(toIndentedString(statutoryPaternityPay)).append("\n");
    sb.append("    statutorySharedParentalPay: ").append(toIndentedString(statutorySharedParentalPay)).append("\n");
    sb.append("    statutorySickPay: ").append(toIndentedString(statutorySickPay)).append("\n");
    sb.append("    priorEmployeeNumber: ").append(toIndentedString(priorEmployeeNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

