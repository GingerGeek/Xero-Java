/*
 * Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.2
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.accounting;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.xero.api.StringUtil;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** SetupConversionBalances */
public class SetupConversionBalances {
  StringUtil util = new StringUtil();

  @JsonProperty("AccountCode")
  private String accountCode;

  @JsonProperty("Balance")
  private Double balance;

  @JsonProperty("BalanceDetails")
  private List<SetupBalanceDetails> balanceDetails = new ArrayList<SetupBalanceDetails>();

  public SetupConversionBalances accountCode(String accountCode) {
    this.accountCode = accountCode;
    return this;
  }

  /**
   * The account code for a account
   *
   * @return accountCode
   */
  @ApiModelProperty(value = "The account code for a account")
  public String getAccountCode() {
    return accountCode;
  }

  public void setAccountCode(String accountCode) {
    this.accountCode = accountCode;
  }

  public SetupConversionBalances balance(Double balance) {
    this.balance = balance;
    return this;
  }

  /**
   * The opening balances of the account. Debits are positive, credits are negative values
   *
   * @return balance
   */
  @ApiModelProperty(
      value =
          "The opening balances of the account. Debits are positive, credits are negative values")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public SetupConversionBalances balanceDetails(List<SetupBalanceDetails> balanceDetails) {
    this.balanceDetails = balanceDetails;
    return this;
  }

  public SetupConversionBalances addBalanceDetailsItem(SetupBalanceDetails balanceDetailsItem) {
    if (this.balanceDetails == null) {
      this.balanceDetails = new ArrayList<SetupBalanceDetails>();
    }
    this.balanceDetails.add(balanceDetailsItem);
    return this;
  }

  /**
   * An array to specify multiple currency balances of an account
   *
   * @return balanceDetails
   */
  @ApiModelProperty(value = "An array to specify multiple currency balances of an account")
  public List<SetupBalanceDetails> getBalanceDetails() {
    return balanceDetails;
  }

  public void setBalanceDetails(List<SetupBalanceDetails> balanceDetails) {
    this.balanceDetails = balanceDetails;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetupConversionBalances setupConversionBalances = (SetupConversionBalances) o;
    return Objects.equals(this.accountCode, setupConversionBalances.accountCode)
        && Objects.equals(this.balance, setupConversionBalances.balance)
        && Objects.equals(this.balanceDetails, setupConversionBalances.balanceDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountCode, balance, balanceDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetupConversionBalances {\n");
    sb.append("    accountCode: ").append(toIndentedString(accountCode)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceDetails: ").append(toIndentedString(balanceDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
