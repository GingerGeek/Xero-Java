/*
 * Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.2
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.accounting;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.xero.api.StringUtil;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Setup */
public class Setup {
  StringUtil util = new StringUtil();

  @JsonProperty("Accounts")
  private List<Accounts> accounts = new ArrayList<Accounts>();

  @JsonProperty("ConversionDate")
  private SetupConversionDate conversionDate;

  @JsonProperty("ConversionBalances")
  private List<SetupConversionBalances> conversionBalances =
      new ArrayList<SetupConversionBalances>();

  public Setup accounts(List<Accounts> accounts) {
    this.accounts = accounts;
    return this;
  }

  public Setup addAccountsItem(Accounts accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<Accounts>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

  /**
   * See Accounts
   *
   * @return accounts
   */
  @ApiModelProperty(value = "See Accounts")
  public List<Accounts> getAccounts() {
    return accounts;
  }

  public void setAccounts(List<Accounts> accounts) {
    this.accounts = accounts;
  }

  public Setup conversionDate(SetupConversionDate conversionDate) {
    this.conversionDate = conversionDate;
    return this;
  }

  /**
   * Get conversionDate
   *
   * @return conversionDate
   */
  @ApiModelProperty(value = "")
  public SetupConversionDate getConversionDate() {
    return conversionDate;
  }

  public void setConversionDate(SetupConversionDate conversionDate) {
    this.conversionDate = conversionDate;
  }

  public Setup conversionBalances(List<SetupConversionBalances> conversionBalances) {
    this.conversionBalances = conversionBalances;
    return this;
  }

  public Setup addConversionBalancesItem(SetupConversionBalances conversionBalancesItem) {
    if (this.conversionBalances == null) {
      this.conversionBalances = new ArrayList<SetupConversionBalances>();
    }
    this.conversionBalances.add(conversionBalancesItem);
    return this;
  }

  /**
   * Balance supplied for each account that has a value as at the conversion date.
   *
   * @return conversionBalances
   */
  @ApiModelProperty(
      value = "Balance supplied for each account that has a value as at the conversion date.")
  public List<SetupConversionBalances> getConversionBalances() {
    return conversionBalances;
  }

  public void setConversionBalances(List<SetupConversionBalances> conversionBalances) {
    this.conversionBalances = conversionBalances;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Setup setup = (Setup) o;
    return Objects.equals(this.accounts, setup.accounts)
        && Objects.equals(this.conversionDate, setup.conversionDate)
        && Objects.equals(this.conversionBalances, setup.conversionBalances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounts, conversionDate, conversionBalances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Setup {\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    conversionDate: ").append(toIndentedString(conversionDate)).append("\n");
    sb.append("    conversionBalances: ").append(toIndentedString(conversionBalances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
